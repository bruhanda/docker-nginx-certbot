# https://bjornjohansen.no/redirect-to-https-with-nginx
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    server_name _;

    ################################################################################
    # ssl config (check with https://www.ssllabs.com/ssltest/)

    # serve this path, then user certbot like:
    #     certbot certonly \
    #             --text \
    #             --accept-tos \
    #             --email resi@rissner.net \
    #             --webroot -w /var/lib/certbot/ \
    #             -d mydomain1.net - mydomain2.net ...
    #
    location ^~ /.well-known/acme-challenge {
        alias /var/lib/certbot/.well-known/acme-challenge;
        default_type "text/plain";
        try_files $uri =404;
    }

    # HSTS, nice ...
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    # certbot places files in /etc/letsencrypt/live/mydomain.net/...
    # need to use some variables here ...
    ssl_certificate /etc/letsencrypt/live/rissner.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/rissner.net/privkey.pem;

    # default location doing ssl termination.
    # forwards to an upstream host on the docker network http://$host:80
    location / {
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        #proxy_http_version 1.1;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Https-Protocol $ssl_protocol;

        proxy_pass http://$host:80;
    }

    ################################################################################
    # default config

    #charset koi8-r;
    #access_log  /var/log/nginx/log/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

